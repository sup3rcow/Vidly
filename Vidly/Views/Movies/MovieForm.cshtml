@model Vidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "New";
}
@if (Model.Movie == null)
{
    <h2>Submitt a new movie</h2>
}
else
{
    <h2>Edit Movie: @Model.Movie.Name</h2>
}


@using (Html.BeginForm("Save", "Movies"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })@*dodas html attribute: bootrap klasu, kako bi input field dobio temu*@
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Choose..", new { @class = "form-control" })
        <!--                                                                   gdje se nalaze podaci, Id od tablice, sto zelis prikazatu u dropdown-->
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @class = "form-control" })
    </div>
    @Html.HiddenFor(m => m.Movie.Id)<!--moras proslijediti i id, nece bit 0 ako je create new movie, pogledaj kako si napravio u CustomerForm na pocetku -->
    @Html.HiddenFor(m => m.Movie.DateAdded)
    <!--ako fieldovi nisu deifnirani, npr za novi film, u kontroleru ce biti null-->
    <div>
        <button class="btn btn-primary" type="submit">Save</button>
    </div>
}